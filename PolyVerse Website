<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Model Viewer -->
<script type="module" src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"></script>

  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title>polyVerse – Low-Poly Rigged Models</title>

  <!-- Google Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">

  <style>
    html, body {
      overflow-x: hidden;
    }
    /* ---------- Reset ---------- */
    *,*::before,*::after { box-sizing:border-box; margin:0; padding:0 }
    body { font-family:"Inter",sans-serif; line-height:1.6; background:#1e1e20; color:#fff }
    a { text-decoration:none; color:inherit }
    section, footer { opacity:0; animation:fadeInUp 0.6s ease-out forwards }

    /* ---------- Design Tokens & Keyframes ---------- */
    :root {
      --bg:#1e1e20;
      --text:#ffffff;
      --card-bg:#2a2a2d;
      --accent:#ff9800;
      --radius:12px;
    }
    @keyframes fadeInUp {
      from { opacity:0; transform:translateY(20px) }
      to   { opacity:1; transform:translateY(0) }
    }
    @keyframes pulse {
      0%,100% { transform:scale(1) }
      50%     { transform:scale(1.05) }
    }

    /* ---------- Buttons ---------- */
    .btn {
      display:inline-flex; align-items:center; gap:.5rem;
      padding:.75rem 1.5rem; border:none; border-radius:var(--radius);
      font-weight:600; cursor:pointer; background:var(--accent);
      color:#fff; transition:transform .2s, box-shadow .2s;
    }
    .btn:hover { transform:scale(1.05); box-shadow:0 6px 14px rgba(0,0,0,.4) }
    .btn:active { transform:scale(.97) }
    .back-btn { margin-bottom:1rem; }

    /* ---------- Buy-Now Button ---------- */
    .buy-btn {
      background: var(--accent);
      color: #fff;
      font-size: 1rem;
      font-weight: 600;
      padding: 0.5rem 1.25rem;
      border: none;
      border-radius: 8px;
      margin-left: auto;
      margin-top: 0.5rem;
      margin-bottom: 0;
      display: block;
      box-shadow: 0 2px 8px rgba(0,0,0,0.10);
      transition: background 0.18s, box-shadow 0.18s, transform 0.15s;
      min-width: 110px;
      max-width: 160px;
      text-align: center;
    }
    .buy-btn:hover {
      background: #ffb74d;
      box-shadow: 0 4px 16px rgba(0,0,0,0.13);
      transform: translateY(-2px) scale(1.03);
    }
    @media (max-width: 700px) {
      .buy-btn {
        margin-left: 0;
        width: 100%;
        max-width: 100%;
      }
    }

    /* ---------- Navbar ---------- */
    nav {
      position:sticky; top:0; z-index:10;
      display:flex; align-items:center; justify-content:space-between;
      padding:.75rem 1rem; background:var(--card-bg);
      box-shadow:0 1px 3px rgba(0,0,0,.5);
    }
    .logo { display:flex; align-items:center; gap:.5rem }
    nav ul { display:flex; gap:1rem; list-style:none }
    @media(max-width:600px){ nav ul{ display:none } }

    /* ---------- Hero Section (blue gradient) ---------- */
    .hero {
      background:linear-gradient(135deg,#2196F3,#1E88E5);
      padding:4rem 1rem; text-align:center;
    }
    .hero h1 { font-size:2.5rem; margin-bottom:1rem }
    .hero p  { font-size:1.125rem; margin-bottom:2rem; color:rgba(255,255,255,0.85) }

    /* ---------- Search Bar Styling ---------- */
    .hero-search { margin-top:1rem }
    .hero-search input {
      width:100%; max-width:600px;
      padding:1rem 1.5rem;
      border:none; border-radius:var(--radius);
      outline:none; font-size:1rem;
    }
    .hero-search input::placeholder { color:#ccc }

    /* ---------- Gallery ---------- */
    main { max-width:1280px; margin:2rem auto; padding:0 1rem }
    .gallery {
      display:grid;
      grid-template-columns:repeat(auto-fill,minmax(280px,1fr));
      gap:1.5rem;
    }
    .card {
      background:var(--card-bg); border-radius:var(--radius);
      overflow:hidden; box-shadow:0 2px 6px rgba(0,0,0,.3);
      transition:transform .3s, box-shadow .3s;
      display:flex; flex-direction:column;
      cursor:pointer;
    }
    .card:hover {
      transform:scale(1.05);
      box-shadow:0 8px 24px rgba(255,152,0,0.5);
    }
    .card img { width:100% }
    .card .info { padding:1rem; flex-grow:1; display:flex; flex-direction:column }
    .card h3 { font-size:1rem; margin-bottom:.5rem }
    .card p  { font-size:.875rem; color:#aaa }

    /* ---------- Modals (overlay stays global) ---------- */
    .modal {
      position:fixed; inset:0;
      background:rgba(0,0,0,0.6);   /* semi-transparent dark overlay */
      display:none;
      align-items:center; justify-content:center;
      z-index:1000;
    }
    .modal.active { display:flex }

    .modal-content {
      background:var(--card-bg);
      transform:scale(0.8); opacity:0;
      transition:.3s ease-out;
    }
    .modal.active .modal-content {
      transform:scale(1); opacity:1;
    }

    /* ---------- Model Detail Page ---------- */
    #modelPage {
      width: 100%;
      max-width: 100%;
      margin: 0;
      padding: 2rem 0 2rem 0;
      background: var(--bg);
      min-height: 100vh;
      display: none;
      color: #fff;
    }
    #modelPage .model-detail {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 2rem;
      width: 100%;
      max-width: 1400px;
      margin: 0 auto;
      position: relative;
    }
    @media (min-width: 900px) {
      #modelPage .model-detail {
        flex-direction: row;
        align-items: flex-start;
        gap: 3rem;
      }
    }
    #modelPage .model-viewer-container {
      width: 100%;
      max-width: 900px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      flex: 1 1 0%;
    }
    #modelPage model-viewer, #modelPage img {
      width: 100%;
      max-width: 900px;
      height: min(70vh, 600px);
      margin: 0 auto;
      display: block;
      background: var(--card-bg);
      border-radius: var(--radius);
      object-fit: contain;
      box-shadow: 0 4px 24px rgba(0,0,0,0.25);
    }
    #modelPage .desc {
      width: 100%;
      max-width: 500px;
      margin: 2.5rem auto 0 auto;
      padding: 1.5rem 0 0 0;
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
    }
    #modelPage .desc h2 {
      margin-bottom: 0.5rem;
    }
    #modelPage .desc p {
      line-height: 1.5;
      margin-bottom: 1rem;
    }
    /* Back to Shop button at top */
    #modelPage .back-btn {
      margin-bottom: 2rem;
      margin-top: 0;
      margin-left: 2rem;
      align-self: flex-start;
    }
    @media (max-width: 700px) {
      #modelPage .model-detail {
        flex-direction: column;
        align-items: center;
      }
      #modelPage .desc {
        max-width: 100vw;
        margin-left: 0;
      }
      #modelPage .back-btn {
        margin-left: 1rem;
      }
    }
    /* --- Suggested/Related Models Sidebar --- */
    #modelPage .suggested {
      flex: 1 1 0%;
      min-width: 420px;
      max-width: 600px;
      margin-left: 0;
      background: var(--card-bg);
      border-radius: 28px;
      padding: 2.5rem 2rem 2.5rem 2rem;
      box-shadow: 0 10px 40px rgba(0,0,0,0.35);
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
      align-items: center;
      /* Remove overflow and max-height to prevent scrollbars */
    }
    #modelPage .suggested::-webkit-scrollbar {
      width: 8px;
      background: #18181a;
    }
    #modelPage .suggested::-webkit-scrollbar-thumb {
      background: #232326;
      border-radius: 10px;
    }
    #modelPage .suggested h4 {
      font-size: 1.5rem;
      font-weight: 700;
      margin-bottom: 1.5rem;
      color: var(--text);
      letter-spacing: -0.02em;
      position: relative;
      padding-bottom: 0.8rem;
      text-align: left;
      width: 100%;
    }
    #modelPage .suggested h4::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 48px;
      height: 3px;
      background: var(--accent);
      border-radius: 2px;
    }
    #modelPage .suggested .suggested-card {
      display: flex;
      align-items: center;
      gap: 1.5rem;
      background: #232326;
      border-radius: 20px;
      padding: 1.5rem 1.5rem 1.5rem 1.5rem;
      cursor: pointer;
      transition: box-shadow 0.25s, transform 0.22s, background 0.22s;
      min-height: 140px;
      height: 150px;
      width: 100%;
      max-width: 480px;
      margin-bottom: 0;
      box-shadow: 0 6px 32px rgba(0,0,0,0.22);
      border: 2px solid transparent;
      position: relative;
    }
    #modelPage .suggested .suggested-card:hover {
      background: #29292d;
      box-shadow: 0 16px 48px rgba(255,152,0,0.10), 0 8px 32px rgba(0,0,0,0.32);
      transform: translateY(-4px) scale(1.025);
      border: 2px solid #ff9800;
    }
    #modelPage .suggested .suggested-card.active {
      background: linear-gradient(135deg, #ff9800 60%, #ffb74d 100%);
      border: 2px solid #ff9800;
      box-shadow: 0 12px 40px rgba(255,152,0,0.18), 0 8px 32px rgba(0,0,0,0.32);
      cursor: default;
      transform: translateY(-4px) scale(1.03);
    }
    #modelPage .suggested .suggested-card.active::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(135deg, #ff9800, #ffb74d);
      border-radius: 22px;
      z-index: -1;
      opacity: 0.18;
      filter: blur(10px);
    }
    #modelPage .suggested .suggested-thumb {
      width: 100px;
      height: 100px;
      border-radius: 16px;
      object-fit: cover;
      background: #18181a;
      flex-shrink: 0;
      box-shadow: 0 6px 24px rgba(0,0,0,0.22);
      border: 2px solid #232326;
      transition: border 0.2s;
    }
    #modelPage .suggested .suggested-card:hover .suggested-thumb {
      border: 2px solid #ff9800;
    }
    #modelPage .suggested .suggested-info {
      display: flex;
      flex-direction: column;
      justify-content: center;
      height: 100%;
      min-width: 0;
      flex: 1 1 0%;
      gap: 0.5rem;
    }
    #modelPage .suggested .suggested-title {
      font-size: 1.3rem;
      color: #fff;
      font-weight: 700;
      line-height: 1.3;
      margin-bottom: 0.2rem;
      word-wrap: break-word;
      overflow-wrap: break-word;
      hyphens: auto;
      letter-spacing: -0.01em;
    }
    #modelPage .suggested .suggested-meta {
      font-size: 0.95rem;
      color: #ffb74d;
      font-weight: 500;
      line-height: 1.3;
      opacity: 0.82;
      letter-spacing: 0.01em;
    }
    @media (max-width: 900px) {
      #modelPage .suggested {
        min-width: 100vw;
        max-width: 100vw;
        border-radius: 0;
        padding: 1.5rem 0.5rem;
      }
      #modelPage .suggested .suggested-card {
        max-width: 98vw;
        min-height: 120px;
        height: 130px;
        padding: 1rem 1rem;
        border-radius: 16px;
      }
      #modelPage .suggested .suggested-thumb {
        width: 70px;
        height: 70px;
        border-radius: 10px;
      }
    }
    @media (max-width: 600px) {
      #modelPage .suggested {
        display: none;
      }
    }

    /* ---------- Model Viewer Styling ---------- */
    model-viewer {
      width:100%;
      height:400px;
      border-radius:var(--radius);
      background:var(--card-bg);
      --poster-color: transparent;
    }

    .model-viewer-container {
      position:relative;
      border-radius:var(--radius);
      overflow:hidden;
    }

    .view-toggle {
      position:absolute;
      top:10px;
      right:10px;
      background:rgba(0,0,0,0.7);
      color:white;
      border:none;
      padding:8px 12px;
      border-radius:6px;
      cursor:pointer;
      font-size:12px;
      z-index:10;
    }

    .view-toggle:hover {
      background:rgba(0,0,0,0.9);
    }

    /* ---------- Checkout Page ---------- */
    #checkoutPage {
      display:none; padding:2rem; min-height:100vh;
      background:var(--bg); color:var(--text);
    }
    #checkoutPage form {
      max-width:500px; margin:auto; display:flex; flex-direction:column; gap:1rem;
    }
    #checkoutPage label { display:flex; flex-direction:column; font-weight:600 }
    #checkoutPage input {
      padding:.75rem 1rem; border:none; border-radius:var(--radius);
      background:var(--card-bg); color:#fff; outline:none;
    }

    /* ---------- Contact Footer ---------- */
    footer {
      padding:2rem 1rem; text-align:center; background:#111;
      margin-top:2rem;
    }
    footer p { margin:.5rem 0 }

    /* ---------- Redesigned Login / Register Modal ---------- */
    #loginModal .modal-content {
      position:relative;
      width:100%; max-width:380px;
      padding:2rem 2rem 2.5rem;
      border-radius:var(--radius);
      background:var(--card-bg);
      box-shadow:0 8px 24px rgba(0,0,0,0.4);
    }
    #loginModal .modal-header {
      position:relative;
      display:flex; justify-content:center; align-items:center;
      margin-bottom:1.5rem;
    }
    #loginModal .modal-header h2 {
      font-size:2rem; font-weight:600; color:var(--text);
    }
    #loginModal .modal-header .close {
      position:absolute; top:-0.5rem; right:-0.5rem;
      width:32px; height:32px;
      border:none; border-radius:50%;
      background:transparent;
      color:var(--text); font-size:1.5rem; line-height:1;
      cursor:pointer;
      transition:background .2s;
    }
    #loginModal .modal-header .close:hover {
      background:rgba(255,255,255,0.08);
    }

    #loginModal label {
      width:100%; display:block; font-size:.85rem; font-weight:600;
      margin-bottom:.25rem; color:#ccc;
    }
    #loginModal input.login-input {
      width:100%;
      padding:.75rem 1rem;
      border:none; border-radius:var(--radius);
      background:#202024;
      color:#fff;
      box-shadow:0 2px 6px rgba(0,0,0,0.3);
      margin-bottom:1.25rem;
      outline:none;
    }
    #loginModal input.login-input::placeholder { color:#888 }

    /* row that holds Continue + Create Account */
    #loginModal .action-row{
      display:flex; gap:1rem; margin-bottom:1rem;
    }
    #loginModal .action-row .btn{
      flex:1; justify-content:center;
    }

    #loginModal .login-btn,
    #loginModal .register-submit{
      width:100%;
      display:block;
      padding:.75rem 1rem;
      border:none; border-radius:var(--radius);
      background:var(--accent);
      color:#fff; font-weight:600; text-align:center;
      cursor:pointer;
      transition:background-color .2s,transform .2s;
    }
    #loginModal .login-btn:hover,
    #loginModal .register-submit:hover {
      background:#ffb74d;
      transform:translateY(-1px);
    }

    .google-btn {
      width:100%; display:block;
      margin-top:1rem;
      padding:.75rem 1rem;
      border:none; border-radius:var(--radius);
      background:#fff; color:#444; font-weight:600; text-align:center;
      cursor:pointer;
      box-shadow:0 2px 6px rgba(0,0,0,0.25);
      transition:background-color .2s,transform .2s;
    }
    .google-btn:hover {
      background:#f1f1f1;
      transform:translateY(-1px);
    }

    #loginModal p {
      margin-top:1.25rem;
      font-size:.825rem;
      color:#999;
      text-align:center;
    }

    /* hide register view by default */
    #registerView{ display:none; }

    /* --- Navbar Search Bar --- */
    .navbar-search-container {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      display: none; /* hidden by default */
    }
    .navbar-search {
      width: 100%;
      max-width: 300px;
      min-width: 120px;
      padding: 0.5rem 1rem;
      border: none;
      border-radius: var(--radius);
      font-size: 1rem;
      background: #232326;
      color: #fff;
      margin: 0 auto;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
      outline: none;
      transition: box-shadow .2s;
      text-align: center;
    }
    .navbar-search::placeholder {
      color: #aaa;
    }
    @media (max-width: 600px) {
      .navbar-search {
        max-width: 80vw;
      }
    }
    /* --- Hide hero search on model page --- */
    .hero-search.hide { display: none !important; }

    /* ---------- Download Dropdown Panel ---------- */
    .download-dropdown {
      position: absolute;
      bottom: 100%;
      right: 0;
      background: var(--card-bg);
      border-radius: 12px;
      padding: 1rem;
      box-shadow: 0 8px 32px rgba(0,0,0,0.4);
      border: 1px solid rgba(255,255,255,0.1);
      display: none;
      flex-direction: column;
      gap: 0.5rem;
      min-width: 140px;
      z-index: 100;
      margin-bottom: 0.5rem;
      backdrop-filter: blur(10px);
    }
    .download-dropdown.active {
      display: flex;
      animation: fadeInUp 0.2s ease-out;
    }
    .download-dropdown::after {
      content: '';
      position: absolute;
      top: 100%;
      right: 20px;
      width: 0;
      height: 0;
      border-left: 6px solid transparent;
      border-right: 6px solid transparent;
      border-top: 6px solid var(--card-bg);
    }
    .download-option {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1rem;
      background: #232326;
      border: none;
      border-radius: 8px;
      color: #fff;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      text-decoration: none;
      font-size: 0.9rem;
    }
    .download-option:hover {
      background: #2a2a2d;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }
    .download-option:active {
      transform: translateY(0);
    }
    .download-option .format-icon {
      font-size: 1.1rem;
      opacity: 0.8;
    }
    .download-option .format-name {
      font-weight: 600;
    }
    .download-option .format-ext {
      opacity: 0.6;
      font-size: 0.8rem;
    }

    /* Position the download button container */
    .download-container {
      position: relative;
      display: inline-block;
    }

    /* Update buy button to be download button for free models */
    .download-btn {
      background: var(--accent);
      color: #fff;
      font-size: 1rem;
      font-weight: 600;
      padding: 0.5rem 1.25rem;
      border: none;
      border-radius: 8px;
      margin-left: auto;
      margin-top: 0.5rem;
      margin-bottom: 0;
      display: block;
      box-shadow: 0 2px 8px rgba(0,0,0,0.10);
      transition: background 0.18s, box-shadow 0.18s, transform 0.15s;
      min-width: 110px;
      max-width: 160px;
      text-align: center;
      cursor: pointer;
    }
    .download-btn:hover {
      background: #ffb74d;
      box-shadow: 0 4px 16px rgba(0,0,0,0.13);
      transform: translateY(-2px) scale(1.03);
    }
    @media (max-width: 700px) {
      .download-btn {
        margin-left: 0;
        width: 100%;
        max-width: 100%;
      }
    }
  </style>
</head>
<body>

  <!-- NAVBAR -->
  <nav id="navbar">
    <div class="logo">
     <img src="https://img.itch.zone/aW1hZ2UvMzY2NTA1MS8yMTgwOTEzNC5wbmc=/250x600/Q5BHfP.png"
     alt="  polyVerse logo"
     

           alt="polyVerse logo" style="height:32px;width:32px;border-radius:6px">
      <span style="font-weight:600;font-size:1.1rem">polyVerse</span>
    </div>
    <div class="navbar-search-container" id="navbarSearchContainer">
      <input id="navbarSearch" type="search" placeholder="Search for anything" class="navbar-search">
    </div>
    <ul>
      <li><button class="btn" id="loginBtn">Log In</button></li>
    </ul>
  </nav>

  <!-- HERO -->
  <section class="hero">
    <h1>Any low-poly character you could ever need</h1>
    <p>Build something beautiful with 10+ free models</p>
    <div class="hero-search">
      <input id="heroSearch" type="search" placeholder="Search for anything">
    </div>
  </section>

  <!-- GALLERY -->
  <main id="mainContent">
    <section class="gallery" id="gallery"></section>
  </main>

  <!-- MODEL DETAIL PAGE -->
  <section id="modelPage">
    <button class="btn back-btn" id="backModel">← Back to Shop</button>
    <div class="model-detail">
      <div class="model-viewer-container">
        <button class="view-toggle" id="viewToggle">3D View</button>
        <img id="modelImg" src="" alt="Model preview">
        <model-viewer 
          id="modelViewer"
          camera-controls 
          auto-rotate 
          shadow-intensity="1"
          environment-image="neutral"
          exposure="0.5"
          shadow-softness="0.5"
          style="display:none;">
        </model-viewer>
        <div class="desc">
          <div style="display: flex; align-items: flex-start; gap: 1rem; flex-wrap: wrap;">
            <div style="flex:1 1 200px; min-width:0;">
              <h2 id="modelTitle"></h2>
              <p id="modelDesc"></p>
            </div>
            <div class="download-container">
              <button class="btn buy-btn" id="buyNowBtn">Buy Now</button>
              <button class="download-btn" id="downloadBtn" style="display:none;">Download</button>
              <div class="download-dropdown" id="downloadDropdown">
                <a href="#" class="download-option" data-format="fbx">
                  <span class="format-icon">📦</span>
                  <span class="format-name">FBX</span>
                  <span class="format-ext">.fbx</span>
                </a>
                <a href="#" class="download-option" data-format="glb">
                  <span class="format-icon">🎮</span>
                  <span class="format-name">GLB</span>
                  <span class="format-ext">.glb</span>
                </a>
                <a href="#" class="download-option" data-format="gltf">
                  <span class="format-icon">🌐</span>
                  <span class="format-name">GLTF</span>
                  <span class="format-ext">.gltf</span>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
      <aside class="suggested" id="suggestedModels">
        <h4>Suggested Models</h4>
        <!-- Suggested models will be rendered here -->
      </aside>
    </div>
  </section>

  <!-- CHECKOUT PAGE -->
  <section id="checkoutPage">
    <button class="btn back-btn" id="backCheckout">← Back</button>
    <h2 style="text-align:center;margin-bottom:1rem;">Checkout</h2>
    <form id="checkoutForm">
      <label>
        Full Name
        <input type="text" required placeholder="Your Name">
      </label>
      <label>
        Email Address
        <input type="email" required placeholder="you@example.com">
      </label>
      <label>
        Billing Address
        <input type="text" required placeholder="Street, City, Country">
      </label>
      <button type="submit" class="btn" style="justify-content:center;">Pay with PayPal</button>
    </form>
  </section>

  <!-- CONTACT INFO FOOTER -->
  <footer>
    <h3>Contact Us</h3>
    <p>Email: korenbarshalom@gmail.com</p>
    <p>Phone: 052-221-5113</p>
  </footer>

  <!-- LOGIN / REGISTER MODAL -->
  <div class="modal" id="loginModal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 id="modalTitle">Log In</h2>
        <button class="close" data-close>&times;</button>
      </div>

      <!-- ===== LOGIN VIEW ===== -->
      <div id="loginView">
        <label>Email</label>
        <input type="email" class="login-input" placeholder="you@example.com" required>

        <label>Password</label>
        <input type="password" class="login-input" placeholder="Your password" required>

        <div class="action-row">
          <button class="login-btn">Continue</button>
          <button class="btn" id="createAccountBtn">Create&nbsp;Account</button>
        </div>

        <button class="google-btn">Log in with Google</button>
        <p>Auth backend coming soon.</p>
      </div>

      <!-- ===== REGISTER VIEW ===== -->
      <div id="registerView">
        <label>Full Name</label>
        <input type="text" class="login-input" placeholder="Your Name" required>

        <label>Email</label>
        <input type="email" class="login-input" placeholder="you@example.com" required>

        <label>Password</label>
        <input type="password" class="login-input" placeholder="Choose a strong password" required>

        <button class="register-submit">Create Account</button>

        <button class="google-btn">Sign up with Google</button>
        <p style="margin-top:.75rem;">Already have an account? <a href="#" id="backToLogin" style="color:var(--accent);">Log In</a></p>
      </div>
    </div>
  </div>

  <script type="module">
    // === DATA & HOOKS ===
    const models = [
      { 
        id:1, 
        title:'Human Character Base', 
        price:0, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzYzMDcyMC8yMTYwNTk3NS5wbmc=/347x500/0EGaXE.png', 
        desc:'A versatile low-poly human base mesh, ready for your animations and rigs.',
        src: '3DHumenModel.gltf',  // Your existing .gltf file
        availableFormats: ['gltf'] // Only GLTF is currently available
      },
      { 
        id:2, 
        title:'Human Character Base', 
        price:0, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzYyNjQzMS8yMTgxNjg3OS5wbmc=/347x500/tvf3ho.png', 
        desc:'Alternate low-poly human model optimized for mobile and VR.',
        src: '3DHuman11.gltf',
        availableFormats: ['gltf']
      },
      { 
        id:3, 
        title:'Player Model', 
        price:0, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzYyNjI1OC8yMTYwMzg1Mi5wbmc=/347x500/Qsh9nF.png', 
        desc:'A stylized player avatar with simple topology for game characters.',
        src: 'A19.glb',
        availableFormats: ['glb']
      },
      { 
        id:4, 
        title:'Farmer', 
        price:0, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzY3MzAwMi8yMTg1NTgzNy5wbmc=/250x600/xUXRMO.png', 
        desc:'A medieval knight in low-poly style.',
        src: 'AFramer.gltf',
        availableFormats: ['gltf']
      },
      { 
        id:5, 
        title:'Space Marine', 
        price:0, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzY3MzAwMi8yMTg1NTgzOC5wbmc=/250x600/ATA380.png', 
        desc:'A ready-to-animate archer character.',
        src: 'Aspacemarine.gltf',
        availableFormats: ['gltf']
      },
      { 
        id:6, 
        title:'Police Officer', 
        price:0, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzY3MzAwMi8yMTg1NTgzOS5wbmc=/250x600/tht5cv.png', 
        desc:'Low-poly steampunk robot NPC.',
        src: 'Police.gltf',
        availableFormats: ['gltf']
      },
      { 
        id:7, 
        title:'Scientist', 
        price:0, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzY3MzAwMi8yMTg1NTg0MC5wbmc=/250x600/iZBPRT.png', 
        desc:'Blocky mage perfect for voxel games.',
        src: 'AS.gltf',
        availableFormats: ['gltf']
      },
      { 
        id:8, 
        title:'Astronaut', 
        price:1, 
        thumb:'https://img.itch.zone/aW1hZ2UvMzY3MzAwMi8yMTg1NTg0MS5wbmc=/250x600/lZnMKc.png', 
        desc:'Futuristic soldier rigged for animation.',
        src: 'AS1.gltf',
        availableFormats: ['gltf']
      },
    ];

    // DOM refs
    const gallery      = document.getElementById('gallery');
    const heroSearch   = document.getElementById('heroSearch');
    const loginBtn     = document.getElementById('loginBtn');
    const loginModal   = document.getElementById('loginModal');
    const modelPage    = document.getElementById('modelPage');
    const modelImg     = document.getElementById('modelImg');
    const modelTitle   = document.getElementById('modelTitle');
    const modelDesc    = document.getElementById('modelDesc');
    const modelViewer  = document.getElementById('modelViewer');
    const viewToggle   = document.getElementById('viewToggle');
    const backModel    = document.getElementById('backModel');
    const buyNowBtn    = document.getElementById('buyNowBtn');
    const mainContent  = document.getElementById('mainContent');
    const checkoutPage = document.getElementById('checkoutPage');
    const backCheckout = document.getElementById('backCheckout');

    // NEW refs for login/register toggle
    const loginView   = document.getElementById('loginView');
    const registerView= document.getElementById('registerView');
    const modalTitle  = document.getElementById('modalTitle');
    const createAccBtn= document.getElementById('createAccountBtn');
    const backToLogin = document.getElementById('backToLogin');

    const navbarSearchContainer = document.getElementById('navbarSearchContainer');
    const navbarSearch = document.getElementById('navbarSearch');
    const suggestedModels = document.getElementById('suggestedModels');

    const heroBanner = document.querySelector('.hero');

    // NEW refs for download functionality
    const downloadBtn = document.getElementById('downloadBtn');
    const downloadDropdown = document.getElementById('downloadDropdown');

    // Track last opened model for context-aware back
    let lastOpenedModel = null;
    
    // Track if we're coming from homepage (for suggestion randomization)
    let comingFromHomepage = true;

    // --- Gallery ---
    function renderGallery(list){
      gallery.innerHTML='';
      list.forEach(m=>{
        const card=document.createElement('div');
        card.className='card';
        card.innerHTML=`
          <img src="${m.thumb}" alt="${m.title}">
          <div class="info">
            <h3>${m.title}</h3>
            <p>${m.price?`$${m.price.toFixed(2)}`:'Free'}</p>
          </div>`;
        card.onclick=()=>openModelPage(m, true);
        gallery.appendChild(card);
      });
    }
    renderGallery(models);

    // --- Search Bar Logic ---
    function doSearch(q) {
      const query = q.toLowerCase();
      renderGallery(models.filter(m =>
        m.title.toLowerCase().includes(query) ||
        (m.desc && m.desc.toLowerCase().includes(query))
      ));
    }
    heroSearch.addEventListener('input', e => {
      doSearch(e.target.value);
      // Keep navbar search in sync if visible
      if (navbarSearchContainer.style.display === 'flex') {
        navbarSearch.value = e.target.value;
      }
      // Smart reset: if cleared, return to Home Page and show all models
      if (e.target.value.trim() === '') {
        modelPage.style.display = 'none';
        checkoutPage.style.display = 'none';
        mainContent.style.display = 'block';
        heroSearch.parentElement.classList.remove('hide');
        navbarSearchContainer.style.display = 'none';
        if(heroBanner) heroBanner.style.display = '';
        renderGallery(models);
      }
    });
    navbarSearch.addEventListener('input', e => {
      doSearch(e.target.value);
      // Keep hero search in sync if visible
      if (!heroSearch.parentElement.classList.contains('hide')) {
        heroSearch.value = e.target.value;
      }
      // Smart reset: if cleared, return to Home Page and show all models
      if (e.target.value.trim() === '') {
        modelPage.style.display = 'none';
        checkoutPage.style.display = 'none';
        mainContent.style.display = 'block';
        heroSearch.parentElement.classList.remove('hide');
        navbarSearchContainer.style.display = 'none';
        if(heroBanner) heroBanner.style.display = '';
        renderGallery(models);
      }
    });
    navbarSearch.addEventListener('keydown', e => {
      if (e.key === 'Enter') {
        // Always show gallery and hide model/checkout pages on Enter
        modelPage.style.display = 'none';
        checkoutPage.style.display = 'none';
        mainContent.style.display = 'block';
        heroSearch.parentElement.classList.remove('hide');
        navbarSearchContainer.style.display = 'flex';
        doSearch(navbarSearch.value);
        window.scrollTo(0,0);
      }
    });

    // --- Model detail & checkout navigation ---
    function openModelPage(m, fromHomepage = true){
      // Hide hero search, show navbar search
      heroSearch.parentElement.classList.add('hide');
      navbarSearchContainer.style.display = 'flex';
      navbarSearch.value = '';
      // Hide main content, show model page
      mainContent.style.display = 'none';
      checkoutPage.style.display = 'none';
      modelPage.style.display = 'block';
      // Hide hero banner
      if(heroBanner) heroBanner.style.display = 'none';
      // Set model details
      modelImg.src = m.thumb;
      modelTitle.textContent = m.title;
      modelDesc.textContent = m.desc;
      if (m.src) {
        modelViewer.src = m.src;
      }
      // Show 3D model by default, hide image and toggle
      modelImg.style.display = 'none';
      modelViewer.style.display = 'block';
      viewToggle.style.display = 'none';
      window.scrollTo(0,0);
      
      // Only randomize suggestions when coming from homepage
      if (fromHomepage) {
        renderSuggestedModels(m.id);
        comingFromHomepage = false;
      }
      
      // Remember last opened model for checkout back
      lastOpenedModel = m;
      
      // Handle free vs paid models
      if (m.price === 0) {
        // Free model - show download button
        buyNowBtn.style.display = 'none';
        downloadBtn.style.display = 'block';
      } else {
        // Paid model - show buy button
        buyNowBtn.style.display = 'block';
        downloadBtn.style.display = 'none';
      }
    }

    // --- Suggested Models Logic ---
    function renderSuggestedModels(currentId) {
      if (!suggestedModels) return;
      suggestedModels.innerHTML = '<h4>Suggested Models</h4>';
      
      // Filter out the current model and create a shuffled array
      const availableModels = models.filter(mod => mod.id !== currentId);
      const shuffledModels = shuffleArray([...availableModels]);
      
      // Show up to 3 random models
      const modelsToShow = shuffledModels.slice(0, 3);
      
      modelsToShow.forEach(mod => {
        const card = document.createElement('div');
        card.className = 'suggested-card';
        card.innerHTML = `
          <img class="suggested-thumb" src="${mod.thumb}" alt="${mod.title}">
          <div class="suggested-info">
            <span class="suggested-title">${mod.title}</span>
            <span class="suggested-meta">Free Model</span>
          </div>
        `;
        card.onclick = () => openModelPage(mod, false);
        suggestedModels.appendChild(card);
      });
    }

    // Helper function to shuffle array (Fisher-Yates algorithm)
    function shuffleArray(array) {
      const shuffled = [...array];
      for (let i = shuffled.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
      }
      return shuffled;
    }

    // Toggle between image and 3D view
    viewToggle.addEventListener('click', () => {
      if (modelImg.style.display === 'none') {
        // Switch to image view
        modelImg.style.display = 'block';
        modelViewer.style.display = 'none';
        viewToggle.textContent = '3D View';
      } else {
        // Switch to 3D view
        modelImg.style.display = 'none';
        modelViewer.style.display = 'block';
        viewToggle.textContent = 'Image View';
      }
    });
    
    backModel.onclick=()=>{
      modelPage.style.display='none';
      mainContent.style.display='block';
      // Hide navbar search, show hero search
      navbarSearchContainer.style.display = 'none';
      heroSearch.parentElement.classList.remove('hide');
      // Show hero banner
      if(heroBanner) heroBanner.style.display = '';
      // Reset the flag when returning to homepage
      comingFromHomepage = true;
      window.scrollTo(0,0);
    };
    buyNowBtn.onclick=()=>{
      modelPage.style.display='none';
      mainContent.style.display='none';
      checkoutPage.style.display='block';
      // Show navbar search, hide hero search and hero banner
      navbarSearchContainer.style.display = 'flex';
      heroSearch.parentElement.classList.add('hide');
      if(heroBanner) heroBanner.style.display = 'none';
      window.scrollTo(0,0);
    };
    backCheckout.onclick=()=>{
      // Return to previous model page if available
      if (lastOpenedModel) {
        checkoutPage.style.display = 'none';
        openModelPage(lastOpenedModel);
      } else {
        // Fallback: go to home/shop
        checkoutPage.style.display = 'none';
        modelPage.style.display = 'none';
        mainContent.style.display = 'block';
        navbarSearchContainer.style.display = 'none';
        heroSearch.parentElement.classList.remove('hide');
        if(heroBanner) heroBanner.style.display = '';
        window.scrollTo(0,0);
      }
    };

    // --- Login / Register modal logic ---
    function openModal(m){ 
      m.classList.add('active'); 
      showLogin();               // always default to login view
    }
    function closeModal(m){ m.classList.remove('active'); }
    document.querySelectorAll('[data-close]').forEach(btn=>{
      btn.onclick=()=>closeModal(btn.closest('.modal'));
    });
    loginBtn.onclick=()=>openModal(loginModal);
    window.addEventListener('keydown',e=>{
      if(e.key==='Escape') document.querySelectorAll('.modal.active').forEach(closeModal);
    });

    // toggle helpers
    function showLogin(){
      loginView.style.display='block';
      registerView.style.display='none';
      modalTitle.textContent='Log In';
    }
    function showRegister(){
      loginView.style.display='none';
      registerView.style.display='block';
      modalTitle.textContent='Create Account';
    }
    createAccBtn.onclick=showRegister;
    backToLogin.onclick=e=>{
      e.preventDefault();
      showLogin();
    };

    // --- Fake checkout ---
    document.getElementById('checkoutForm').addEventListener('submit',e=>{
      e.preventDefault();
      alert('Redirecting to PayPal…');
      // implement real PayPal redirect here
    });

    // --- Download functionality ---
    downloadBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      downloadDropdown.classList.toggle('active');
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
      if (!downloadBtn.contains(e.target) && !downloadDropdown.contains(e.target)) {
        downloadDropdown.classList.remove('active');
      }
    });

    // Handle format downloads
    document.querySelectorAll('.download-option').forEach(option => {
      option.addEventListener('click', (e) => {
        e.preventDefault();
        const format = e.currentTarget.dataset.format;
        const modelName = lastOpenedModel ? lastOpenedModel.title.replace(/\s+/g, '_') : 'model';
        
        // Check what formats are actually available for this model
        const availableFormats = getAvailableFormats(lastOpenedModel);
        
        if (!availableFormats.includes(format)) {
          // Format not available - show message
          alert(`Sorry, ${format.toUpperCase()} format is not available for this model yet.\n\nAvailable formats: ${availableFormats.map(f => f.toUpperCase()).join(', ')}`);
          downloadDropdown.classList.remove('active');
          return;
        }
        
        // Get the correct file URL for this format
        const fileUrl = getFileUrlForFormat(lastOpenedModel, format);
        
        if (!fileUrl) {
          alert(`Download not available for ${format.toUpperCase()} format.`);
          downloadDropdown.classList.remove('active');
          return;
        }
        
        // Create download link
        const link = document.createElement('a');
        link.href = fileUrl;
        link.download = `${modelName}.${format}`;
        link.style.display = 'none';
        
        // Trigger download
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        // Close dropdown
        downloadDropdown.classList.remove('active');
        
        // Show success message
        alert(`Downloading ${modelName}.${format}...`);
      });
    });

    // Helper function to get available formats for a model
    function getAvailableFormats(model) {
      if (!model) return [];
      
      // Use the availableFormats property if it exists
      if (model.availableFormats && Array.isArray(model.availableFormats)) {
        return model.availableFormats;
      }
      
      // Fallback: check the file extension
      if (model.src) {
        const extension = model.src.split('.').pop().toLowerCase();
        if (extension === 'gltf' || extension === 'glb') {
          return [extension];
        }
      }
      
      return [];
    }

    // Helper function to get the correct file URL for a format
    function getFileUrlForFormat(model, format) {
      if (!model) return null;
      
      // Check if this format is available for this model
      const availableFormats = getAvailableFormats(model);
      if (!availableFormats.includes(format)) {
        return null;
      }
      
      // For now, we only have the original file
      // In a real implementation, you'd have separate files for each format
      if (model.src && (format === 'gltf' || format === 'glb')) {
        return model.src;
      }
      
      return null;
    }

    // --- On page load, ensure modelPage is hidden to prevent flash ---
    window.addEventListener('DOMContentLoaded', () => {
      modelPage.style.display = 'none';
      navbarSearchContainer.style.display = 'none';
      heroSearch.parentElement.classList.remove('hide');
      // Show hero banner
      if(heroBanner) heroBanner.style.display = '';
    });
  </script>
</body>
</html>
