using UnityEngine;
using UnityEngine.AI;

public class BotChase : MonoBehaviour
{
    public Transform target;  // The target for the bot to chase
    public float chaseSpeed = 10f;  // The bot's chase speed
    public float stoppingDistance = 2.0f;  // Distance to stop chasing
    public float chaseRange = 10.0f;  // Range within which to chase the target

    public float maxHealth = 100f;  // Maximum health of the bot
    private float currentHealth;  // Current health of the bot

    private NavMeshAgent navMeshAgent;  // NavMeshAgent for navigation

    void Start()
    {
        navMeshAgent = GetComponent<NavMeshAgent>();  // Get the NavMeshAgent component
        currentHealth = maxHealth;  // Set the bot's health to max at the start
    }

    void Update()
    {
        // If the bot is dead, stop all actions
        if (currentHealth <= 0)
        {
            Die();
            return;
        }

        // If no target is set, do nothing
        if (target == null) return;

        // Calculate distance to the target
        float distanceToTarget = Vector3.Distance(transform.position, target.position);

        // If within chase range, start chasing
        if (distanceToTarget <= chaseRange)
        {
            navMeshAgent.SetDestination(target.position);  // Set the NavMeshAgent's destination

            navMeshAgent.speed = chaseSpeed;  // Set the bot's chase speed

            // Stop chasing if within stopping distance
            if (distanceToTarget <= stoppingDistance)
            {
                navMeshAgent.isStopped = true;
            }
            else
            {
                navMeshAgent.isStopped = false;
            }
        }
        else
        {
            // Stop if the target is out of chase range
            navMeshAgent.isStopped = true;
        }
    }

    // Method to reduce bot health
    public void TakeDamage(float damage)
    {
        currentHealth -= damage;  // Reduce health
        currentHealth = Mathf.Clamp(currentHealth, 0f, maxHealth);  // Ensure health doesn't go below 0

        Debug.Log("Bot took " + damage + " damage. Current health: " + currentHealth);

        if (currentHealth <= 0)
        {
            Die();  // If health reaches 0, die
        }
    }

    // Method that handles bot's death
    private void Die()
    {
        Debug.Log("The bot is dead!");
        Destroy(gameObject);  // Destroy the bot object when it's dead
    }

    // Triggered by an animation event
    // This method will be called when the animation reaches a certain frame
    public void OnAnimationAttackEvent()
    {
        // The bot takes 50 damage from the animation event
        TakeDamage(50f);  // Adjust damage as needed
    }

    // Handle collision detection with player (if needed for other damage detection)
    private void OnTriggerEnter(Collider other)
    {
        if (other.CompareTag("Player"))
        {
            PlayerMovement player = other.GetComponent<PlayerMovement>();
            if (player != null && player.IsAttacking())  // Check if the player is attacking
            {
                TakeDamage(player.attackDamage);  // Apply damage based on player's attack
            }
        }
    }
}
